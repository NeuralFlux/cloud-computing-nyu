---
swagger: "2.0"
info:
  description: "AI Photo Search application, built during the Cloud and Big Data course\
    \ at New York University."
  version: "1.0.0"
  title: "AI Photo Search"
host: "70frjwcsk7.execute-api.us-east-1.amazonaws.com"
basePath: "/test"
schemes:
- "https"
paths:
  /search:
    get:
      operationId: "searchPhotos"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:489609369564:function:a3-search/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
    options:
      consumes:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'ETag'"
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            contentHandling: "CONVERT_TO_TEXT"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
  /upload:
    put:
      parameters:
      - name: "key"
        in: "query"
        required: true
        type: "string"
      - name: "x-amz-meta-customLabels"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "400":
          description: "400 response"
        "405":
          description: "405 response"
      x-amazon-apigateway-integration:
        type: "aws"
        credentials: "arn:aws:iam::489609369564:role/album-search-api"
        httpMethod: "PUT"
        uri: "arn:aws:apigateway:us-east-1:s3:path/a3-photos/{key}"
        responses:
          "200":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-amz-meta-customLabels: "method.request.header.x-amz-meta-customLabels"
          integration.request.path.key: "method.request.querystring.key"
        passthroughBehavior: "when_no_match"
    options:
      consumes:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'ETag'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,x-amz-meta-customLabels'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            contentHandling: "CONVERT_TO_TEXT"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
x-amazon-apigateway-gateway-responses:
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,PUT'"
      gatewayresponse.header.Access-Control-Expose-Headers: "'ETag'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,PUT'"
      gatewayresponse.header.Access-Control-Expose-Headers: "'ETag'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
x-amazon-apigateway-binary-media-types:
- "*/*"
